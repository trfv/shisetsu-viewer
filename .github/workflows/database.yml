name: Update Database

on:
  workflow_dispatch:
    inputs:
      municipality:
        description: "Municipality to update"
        required: true
        type: choice
        options:
          - tokyo-koutou
          - tokyo-arakawa
          - tokyo-kita
          - tokyo-chuo
          - tokyo-sumida
          - kanagawa-kawasaki
          - all
  # schedule:
  #   - cron: "0 4,16 * * *"

jobs:
  prepare:
    timeout-minutes: 10
    runs-on: ubuntu-latest
    outputs:
      municipalities: ${{ steps.set-municipalities.outputs.municipalities }}
      nodeModulesCacheKey: ${{ steps.set-cache-keys.outputs.nodeModulesCacheKey }}
    steps:
      - name: Set municipalities
        id: set-municipalities
        run: |
          if [ "${{ github.event_name }}" == "workflow_dispatch" ] && [ "${{ github.event.inputs.municipality }}" != "all" ]; then
            echo "municipalities=[\"${{ github.event.inputs.municipality }}\"]" >> $GITHUB_OUTPUT
          else
            echo "municipalities=[\"tokyo-koutou\", \"tokyo-arakawa\", \"tokyo-kita\", \"tokyo-chuo\", \"tokyo-sumida\", \"kanagawa-kawasaki\"]" >> $GITHUB_OUTPUT
          fi
      - name: Checkout
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
      - name: Set cache keys
        id: set-cache-keys
        run: |
          NODE_MODULES_HASH=$(sha256sum package-lock.json | awk '{ print $1 }')
          echo "nodeModulesCacheKey=${{ runner.os }}-node-modules-${NODE_MODULES_HASH}" >> $GITHUB_OUTPUT
      - name: Set Node.js
        uses: actions/setup-node@cdca7365b2dadb8aad0a33bc7601856ffabcc48e # v4.3.0
        with:
          cache: "npm"
          cache-dependency-path: "**/package-lock.json"
          node-version: "lts/*"
      - name: Cache node_modules
        uses: actions/cache@5a3ec84eff668545956fd18022155c47e93e2684 # v4.2.3
        id: node-modules-cache
        with:
          path: "**/node_modules"
          key: ${{ steps.set-cache-keys.outputs.nodeModulesCacheKey }}
      - name: Run npm ci
        if: steps.node-modules-cache.outputs.cache-hit != 'true'
        run: |
          npm ci --ignore-scripts

  update:
    needs: prepare
    timeout-minutes: 10
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        municipality: ${{ fromJSON(needs.prepare.outputs.municipalities) }}
    steps:
      - name: Checkout
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
      - name: Set Node.js
        uses: actions/setup-node@cdca7365b2dadb8aad0a33bc7601856ffabcc48e # v4.3.0
        with:
          cache: "npm"
          cache-dependency-path: "**/package-lock.json"
          node-version: "lts/*"
      - name: Restore cached node_modules
        uses: actions/cache/restore@5a3ec84eff668545956fd18022155c47e93e2684 # v4.2.3
        with:
          path: "**/node_modules"
          key: ${{ needs.prepare.outputs.nodeModulesCacheKey }}
      - name: Update database data
        env:
          GRAPHQL_ENDPOINT: ${{ secrets.GRAPHQL_ENDPOINT }}
          ADMIN_SECRET: ${{ secrets.ADMIN_SECRET }}
          SCRIPT_ENDPOINT: ${{ secrets.SCRIPT_ENDPOINT }}
        run: node .github/tools/updateInstitutions.mjs ${{ matrix.municipality }}
